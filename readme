This repo will not run by itself. It must be served by a proxy. If you are going to use my proxy, then you can entirely ignore index.js within the client's src folder.

scripts to run: 
  client side: npm run local-build 
  proxy side: npm run local-server

There are no watch flags attached, so you would have to redo the above any time you make a change. 


All state management is handled by redux inside of the action creators, and reduers folders. All data that the components require are already centralized there inside the store.

At the current implementation, when a user visits the proxy server, the proxy server parses the user's url, retrieves the listing's id, passes to my application's server. That server then queries the database, and use the results to create a store and create the various react components. The server then injects the store into these components, render them into strings, and pass the strings, along with the initial state of the store back to the proxy. The proxy injects these strings into an html, stringifies the intial state and injects that into the html template as well, and finally sends back the html to the user.

When implementing the back end, please make sure that names match. If you make a change on the application's server, you would have to make a change in the proxy server, its template file, as well as the client.js file, and possibly the root reducer file too. 

The current schemas live in server/db 